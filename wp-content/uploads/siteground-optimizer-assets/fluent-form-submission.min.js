(() => {
    function a(b) {
        return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
            return typeof a
        } : function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }, a(b)
    }

    function b(a, d) {
        var b = Object.keys(a),
            c;
        return Object.getOwnPropertySymbols && (c = Object.getOwnPropertySymbols(a), d && (c = c.filter(function(b) {
            return Object.getOwnPropertyDescriptor(a, b).enumerable
        })), b.push.apply(b, c)), b
    }

    function c(e) {
        for (var a = 1, c; a < arguments.length; a++) c = null != arguments[a] ? arguments[a] : {}, a % 2 ? b(Object(c), !0).forEach(function(a) {
            d(e, a, c[a])
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(c)) : b(Object(c)).forEach(function(a) {
            Object.defineProperty(e, a, Object.getOwnPropertyDescriptor(c, a))
        });
        return e
    }

    function d(b, c, e) {
        var d;
        return d = function(b, e) {
            var c, d;
            if ("object" != a(b) || !b) return b;
            if (c = b[Symbol.toPrimitive], void 0 !== c) {
                if (d = c.call(b, e || "default"), "object" != a(d)) return d;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return ("string" === e ? String : Number)(b)
        }(c, "string"), (c = "symbol" == a(d) ? d : String(d)) in b ? Object.defineProperty(b, c, {
            value: e,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : b[c] = e, b
    }
    jQuery(document).ready(function() {
        window.fluentFormrecaptchaSuccessCallback = function(b) {
                if (window.innerWidth < 768 && /iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) {
                    var a = jQuery(".g-recaptcha").filter(function(a, c) {
                        return grecaptcha.getResponse(a) == b
                    });
                    a.length && jQuery("html, body").animate({
                        scrollTop: a.first().offset().top - jQuery(window).height() / 2
                    }, 0)
                }
            }, window.ffValidationError = function() {
                var a = function() {};
                return (a.prototype = Object.create(Error.prototype)).constructor = a, a
            }(), window.ff_helper = {
                numericVal: function(a) {
                    if (a.hasClass("ff_numeric")) {
                        var b = JSON.parse(a.attr("data-formatter"));
                        return currency(a.val(), b).value
                    }
                    return a.val() || 0
                },
                formatCurrency: function(a, b) {
                    if (a.hasClass("ff_numeric")) {
                        var c = JSON.parse(a.attr("data-formatter"));
                        return currency(b, c).format()
                    }
                    return b
                }
            },
            function(b, a) {
                var d, e, f, g;
                b || (b = {}), b.stepAnimationDuration = parseInt(b.stepAnimationDuration), d = {}, window.fluentFormApp = function(c) {
                    var i = c.attr("data-form_instance"),
                        e = window["fluent_form_" + i],
                        w, t, l, C, r, B, o, A, z, q, E, m, k, x, h, n, u, y, j, v, p, s, D, g;
                    return e ? d[i] ? d[i] : (D = e.form_id_selector, g = "." + i, w = f, t = {}, l = function() {
                        return a("body").find("form" + g)
                    }, r = function(a, b) {
                        var d = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                            e = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "next";
                        c.trigger("update_slider", {
                            goBackToStep: a,
                            animDuration: b,
                            isScrollTop: d,
                            actionType: e
                        })
                    }, B = function(b) {
                        var d, e, q, i, c, l, n, p, f, j, k;
                        try {
                            if (d = b.find(":input").filter(function(c, b) {
                                    return !a(b).closest(".has-conditions").hasClass("ff_excluded")
                                }), x(d), e = d.serializeArray(), q = e.map(function(a) {
                                    return a.name
                                }), d = d.filter(function() {
                                    return !a(this).closest(".ff-el-input--content").find("table").length
                                }), i = {}, d.each(function() {
                                    var c = a(this).attr("name");
                                    q.includes(c) || (a(this).is(":checkbox") || a(this).is(":radio")) && (i[c] || b.find('input[name="' + c + '"]:checked').length || (e.push({
                                        name: c,
                                        value: ""
                                    }), i[c] = !0))
                                }), c = {
                                    data: a.param(a.map(e, function(a) {
                                        return {
                                            name: a.name,
                                            value: a.value
                                        }
                                    })),
                                    action: "fluentform_submit",
                                    form_id: b.data("form_id")
                                }, a.each(b.find("[type=file]"), function(f, d) {
                                    var b = {},
                                        e = d.name + "[]";
                                    b[e] = [], a(d).closest("div").find(".ff-uploaded-list").find(".ff-upload-preview[data-src]").each(function(c, d) {
                                        b[e][c] = a(this).data("src")
                                    }), a.each(b, function(e, b) {
                                        if (b.length) {
                                            var d = {};
                                            d[e] = b, c.data += "&" + a.param(d)
                                        }
                                    })
                                }), b.find(".ff_uploading").length) return l = a("<div/>", {
                                class: "error text-danger"
                            }), n = a("<span/>", {
                                class: "error-clear",
                                html: "&times;",
                                click: function(b) {
                                    return a(g + "_errors").html("")
                                }
                            }), p = a("<span/>", {
                                class: "error-text",
                                text: "File upload in progress. Please wait..."
                            }), a(g + "_errors").html(l.append(p, n)).show();
                            b.find(".ff-el-recaptcha.g-recaptcha").length && (f = b.find(".ff-el-recaptcha.g-recaptcha").data("grecaptcha_widget_id"), f && (c.data += "&" + a.param({
                                    "g-recaptcha-response": grecaptcha.getResponse(f)
                                }))), b.find(".ff-el-hcaptcha.h-captcha").length && (j = b.find(".ff-el-hcaptcha.h-captcha").data("hcaptcha_widget_id"), j && (c.data += "&" + a.param({
                                    "h-captcha-response": hcaptcha.getResponse(j)
                                }))), b.find(".ff-el-turnstile.cf-turnstile").length && (k = b.find(".ff-el-turnstile.cf-turnstile").data("turnstile_widget_id"), k && (c.data += "&" + a.param({
                                    "cf-turnstile-response": turnstile.getResponse(k)
                                }))), a(g + "_success").remove(), a(g + "_errors").html(""), b.find(".error").html(""), b.parent().find(".ff-errors-in-stack").hide(),
                                function(a, d) {
                                    var b = [],
                                        c = t;
                                    return a.hasClass("ff_has_v3_recptcha") && (c.ff_v3_recptcha = function(b, c) {
                                        var a = jQuery.Deferred(),
                                            d = b.data("recptcha_key");
                                        return grecaptcha.execute(d, {
                                            action: "submit"
                                        }).then(function(b) {
                                            c.data += "&" + jQuery.param({
                                                "g-recaptcha-response": b
                                            }), a.resolve()
                                        }), a.promise()
                                    }), jQuery.each(c, function(e, c) {
                                        b.push(c(a, d))
                                    }), jQuery.when.apply(jQuery, b)
                                }(b, c).then(function() {
                                    A(b), o(b, c)
                                })
                        } catch (a) {
                            if (!(a instanceof ffValidationError)) throw a;
                            h(a.messages), m(350)
                        }
                    }, o = function(c, g) {
                        var f, d, i = (f = "t=" + Date.now(), d = b.ajaxUrl, d += (d.split("?")[1] ? "&" : "?") + f),
                            j;
                        this.isSending || (j = this, this.isSending = !0, a.post(i, g).then(function(d) {
                            var i, f, g;
                            if (!d || !d.data || !d.data.result) return c.trigger("fluentform_submission_failed", {
                                form: c,
                                response: d
                            }), void h(d);
                            if (d.data.append_data && p(d.data.append_data), d.data.nextAction) c.trigger("fluentform_next_action_" + d.data.nextAction, {
                                form: c,
                                response: d
                            });
                            else {
                                if (c.triggerHandler("fluentform_submission_success", {
                                        form: c,
                                        config: e,
                                        response: d
                                    }), jQuery(document.body).trigger("fluentform_submission_success", {
                                        form: c,
                                        config: e,
                                        response: d
                                    }), "redirectUrl" in d.data.result) return d.data.result.message && (a("<div/>", {
                                    id: D + "_success",
                                    class: "ff-message-success"
                                }).html(d.data.result.message).insertAfter(c), c.find(".ff-el-is-error").removeClass("ff-el-is-error")), void(location.href = d.data.result.redirectUrl);
                                i = D + "_success", f = "#" + i, a(f).length && a(f).slideUp("fast"), a("<div/>", {
                                    id: i,
                                    class: "ff-message-success"
                                }).html(d.data.result.message).insertAfter(c), c.find(".ff-el-is-error").removeClass("ff-el-is-error"), "hide_form" == d.data.result.action ? (c.hide().addClass("ff_force_hide"), c[0].reset()) : (jQuery(document.body).trigger("fluentform_reset", [c, e]), c[0].reset()), g = a(f), g.length && !k(g[0]) && a("html, body").animate({
                                    scrollTop: g.offset().top - (a("#wpadminbar") ? 32 : 0) - 20
                                }, b.stepAnimationDuration)
                            }
                        }).fail(function(a) {
                            var d, e;
                            c.trigger("fluentform_submission_failed", {
                                form: c,
                                response: a
                            }), a && a.responseJSON && a.responseJSON && a.responseJSON.errors ? (a.responseJSON.append_data && p(a.responseJSON.append_data), h(a.responseJSON.errors), m(350), c.find(".fluentform-step").length) && (d = c.find(".error").not(":empty:first").closest(".fluentform-step"), d.length && (e = d.index(), r(e, b.stepAnimationDuration, !1))) : h(a.responseText)
                        }).always(function(e) {
                            var a, b, d;
                            j.isSending = !1, z(c), window.grecaptcha && (a = c.find(".ff-el-recaptcha.g-recaptcha").data("grecaptcha_widget_id"), a && grecaptcha.reset(a)), window.hcaptcha && (b = c.find(".ff-el-hcaptcha.h-captcha").data("hcaptcha_widget_id"), b && hcaptcha.reset(b)), window.turnstile && (d = c.find(".ff-el-turnstile.cf-turnstile").data("turnstile_widget_id"), d && turnstile.reset(d))
                        }))
                    }, q = function() {
                        "yes" != c.attr("data-ff_reinit") && (a(document).on("submit", g, function(b) {
                            b.preventDefault(), window.ff_sumitting_form || (window.ff_sumitting_form = !0, setTimeout(function() {
                                window.ff_sumitting_form = !1
                            }, 1500), B(a(this)))
                        }), a(document).on("reset", g, function(d) {
                            ! function(d) {
                                var f, g;
                                a(".ff-step-body", c).length && r(0, b.stepAnimationDuration, !1), d.find(".ff-el-repeat .ff-t-cell").each(function() {
                                    a(this).find("input").not(":first").remove()
                                }), d.find(".ff-el-repeat .ff-el-repeat-buttons-list").find(".ff-el-repeat-buttons").not(":first").remove(), f = d.find("input[type=checkbox],input[type=radio]"), f.length && f.each(function(c, b) {
                                    (b = a(b)).prop("defaultChecked") ? b.closest(".ff-el-form-check").addClass("ff_item_selected") : b.closest(".ff-el-form-check.ff_item_selected").removeClass("ff_item_selected")
                                }), d.find("input[type=file]").closest("div").find(".ff-uploaded-list").html("").end().closest("div").find(".ff-upload-progress").addClass("ff-hidden").find(".ff-el-progress-bar").css("width", "0%"), g = d.find('input[type="range"]'), g.length && g.each(function(c, b) {
                                    (b = a(b)).val(b.data("calc_value")).change()
                                }), a.each(e.conditionals, function(c, b) {
                                    a.each(b.conditions, function(b, a) {
                                        E(j(a.field))
                                    })
                                })
                            }(a(this))
                        }))
                    }, E = function(b) {
                        var c = b.prop("type");
                        null != c && ("checkbox" == c || "radio" == c ? b.each(function(c, d) {
                            var b = a(this);
                            b.prop("checked", b.prop("defaultChecked"))
                        }) : c.startsWith("select") ? b.find("option").each(function(c, d) {
                            var b = a(this);
                            b.prop("selected", b.prop("defaultSelected"))
                        }) : b.val(b.prop("defaultValue")), b.trigger("change"))
                    }, m = function(d) {
                        var f = e.settings.layout.errorMessagePlacement,
                            b;
                        f && "stackToBottom" != f && (b = c.find(".ff-el-is-error").first(), b.length && !k(b[0]) && a("html, body").delay(d).animate({
                            scrollTop: b.offset().top - (a("#wpadminbar") ? 32 : 0) - 20
                        }, d))
                    }, k = function(c) {
                        if (!c) return !0;
                        var b = c.getBoundingClientRect();
                        return b.top >= 0 && b.left >= 0 && b.bottom <= a(window).height() && b.right <= a(window).width()
                    }, h = function(b) {
                        if (c.parent().find(".ff-errors-in-stack").empty(), b)
                            if ("string" != typeof b) {
                                var d = e.settings.layout.errorMessagePlacement;
                                if (!d || "stackToBottom" == d) return n(b), !1;
                                c.find(".error").empty(), c.find(".ff-el-group").removeClass("ff-el-is-error"), a.each(b, function(c, b) {
                                    "string" == typeof b && (b = [b]), a.each(b, function(b, a) {
                                        u(c, a)
                                    })
                                })
                            } else n({
                                error: [b]
                            })
                    }, n = function(c) {
                        var b = l().parent().find(".ff-errors-in-stack");
                        c && (a.isEmptyObject(c) || (a.each(c, function(f, c) {
                            var d, g, e;
                            "string" == typeof c && (c = [c]), a.each(c, function(h, d) {
                                var c = a("<div/>", {
                                        class: "error text-danger"
                                    }),
                                    e = a("<span/>", {
                                        class: "error-clear",
                                        html: "&times;"
                                    }),
                                    g = a("<span/>", {
                                        class: "error-text",
                                        "data-name": j(f).attr("name"),
                                        html: d
                                    });
                                c.attr("role", "alert"), c.append(g, e), b.append(c).show()
                            }), d = j(f), d && (g = d.attr("name"), d.attr("aria-invalid", "true"), e = a("[name='" + g + "']").first(), e && e.closest(".ff-el-group").addClass("ff-el-is-error"))
                        }), k(b[0]) || a("html, body").animate({
                            scrollTop: b.offset().top - 100
                        }, 350), b.on("click", ".error-clear", function() {
                            a(this).closest("div").remove(), b.hide()
                        }).on("click", ".error-text", function() {
                            var b = a("[name='".concat(a(this).data("name"), "']")).first();
                            a("html, body").animate({
                                scrollTop: b.offset() && b.offset().top - 100
                            }, 350, function(a) {
                                return b.focus()
                            })
                        })))
                    }, u = function(e, c) {
                        var b, d;
                        (b = j(e)).length ? (b.attr("aria-invalid", "true"), (d = a("<div/>", {
                            class: "error text-danger"
                        })).attr("role", "alert"), b.closest(".ff-el-group").addClass("ff-el-is-error"), b.closest(".ff-el-input--content").length ? (b.closest(".ff-el-input--content").find("div.error").remove(), b.closest(".ff-el-input--content").append(d.html(c))) : (b.find("div.error").remove(), b.append(d.text(c)))) : n([c])
                    }, y = function() {
                        c.find(".ff-el-group,.ff_repeater_table").on("change", "input,select,textarea", function() {
                            var b, c;
                            window.ff_disable_error_clear || (a(this).attr("aria-invalid", "false"), b = e.settings.layout.errorMessagePlacement, (b || "stackToBottom" != b) && (c = a(this).closest(".ff-el-group"), c.hasClass("ff-el-is-error") && c.removeClass("ff-el-is-error").find(".error.text-danger").remove()))
                        })
                    }, j = function(c) {
                        var d = l(),
                            b = a("[data-name='" + c + "']", d);
                        return (b = b.length ? b : a("[name='" + c + "']", d)).length ? b : a("[name='" + c + "[]']", d)
                    }, v = function() {
                        if (c.find(".ff-el-recaptcha.g-recaptcha").length && window.grecaptcha.ready(function() {
                                var a = c.find(".ff-el-recaptcha.g-recaptcha"),
                                    b = a.data("sitekey"),
                                    d = a.attr("id"),
                                    e = grecaptcha.render(document.getElementById(d), {
                                        sitekey: b
                                    });
                                a.attr("data-grecaptcha_widget_id", e)
                            }), c.find(".ff-el-turnstile.cf-turnstile").length && window.turnstile.ready(function() {
                                var a = c.find(".ff-el-turnstile.cf-turnstile"),
                                    b = a.data("sitekey"),
                                    d = a.attr("id"),
                                    e = turnstile.render(document.getElementById(d), {
                                        sitekey: b
                                    });
                                a.attr("data-turnstile_widget_id", e)
                            }), c.find(".ff-el-hcaptcha.h-captcha").length) {
                            var a = c.find(".ff-el-hcaptcha.h-captcha"),
                                b = a.data("sitekey"),
                                d = a.attr("id"),
                                e = hcaptcha.render(document.getElementById(d), {
                                    sitekey: b
                                });
                            a.attr("data-hcaptcha_widget_id", e)
                        }
                    }, p = function(b) {
                        jQuery.each(b, function(d, b) {
                            if (b) {
                                var e = c.find("input[name=" + d + "]");
                                e.length ? e.attr("value", b) : a("<input>").attr({
                                    type: "hidden",
                                    name: d,
                                    value: b
                                }).appendTo(c)
                            }
                        })
                    }, s = {
                        initFormHandlers: function() {
                            q(), C(), y(), c.removeClass("ff-form-loading").addClass("ff-form-loaded"), c.on("show_element_error", function(b, a) {
                                u(a.element, a.message)
                            })
                        },
                        registerFormSubmissionHandler: q,
                        maybeInlineForm: C = function() {
                            c.hasClass("ff-form-inline") && c.find("button.ff-btn-submit").css("height", "50px")
                        },
                        reinitExtras: function() {
                            if (c.find(".ff-el-recaptcha.g-recaptcha").length && window.grecaptcha.ready(function() {
                                    var a = c.find(".ff-el-recaptcha.g-recaptcha"),
                                        b = a.data("sitekey"),
                                        d = a.attr("id"),
                                        e = grecaptcha.render(document.getElementById(d), {
                                            sitekey: b
                                        });
                                    a.attr("data-grecaptcha_widget_id", e)
                                }), c.find(".ff-el-turnstile.cf-turnstile").length && window.turnstile.ready(function() {
                                    var a = c.find(".ff-el-turnstile.cf-turnstile"),
                                        b = a.data("sitekey"),
                                        d = a.attr("id"),
                                        e = turnstile.render(document.getElementById(d), {
                                            sitekey: b
                                        });
                                    a.attr("data-turnstile_widget_id", e)
                                }), c.find(".ff-el-hcaptcha.h-captcha").length) {
                                var a = c.find(".ff-el-hcaptcha.h-captcha"),
                                    b = a.data("sitekey"),
                                    d = a.attr("id"),
                                    e = hcaptcha.render(document.getElementById(d), {
                                        sitekey: b
                                    });
                                a.attr("data-hcaptcha_widget_id", e)
                            }
                        },
                        initTriggers: function() {
                            c = l(), jQuery(document.body).trigger("fluentform_init", [c, e]), jQuery(document.body).trigger("fluentform_init_" + e.id, [c, e]), c.trigger("fluentform_init_single", [this, e]), c.find("input.ff-el-form-control").on("keypress", function(a) {
                                return 13 !== a.which
                            }), c.data("is_initialized", "yes"), c.find(".ff-el-tooltip").on("mouseenter", function(j) {
                                var i = a(this).data("content"),
                                    b = a(".ff-el-pop-content"),
                                    f, g, h, e, d;
                                b.length || (a("<div/>", {
                                    class: "ff-el-pop-content"
                                }).appendTo(document.body), b = a(".ff-el-pop-content")), b.html(i), f = c.innerWidth() - 20, b.css("max-width", f), g = a(this).offset().left, h = b.outerWidth(), e = b.outerHeight(), d = g - h / 2 + 10, d < 15 && (d = 15), b.css("top", a(this).offset().top - e - 5), b.css("left", d)
                            }), c.find(".ff-el-tooltip").on("mouseleave", function() {
                                a(".ff-el-pop-content").remove()
                            }), a(document).on("lity:open", function() {
                                v()
                            }), v()
                        },
                        validate: x = function(b) {
                            b.length || (b = a(".frm-fluent-form").find(":input").not(":button").filter(function(c, b) {
                                return !a(b).closest(".has-conditions").hasClass("ff_excluded")
                            })), b.each(function(c, b) {
                                a(b).closest(".ff-el-group").removeClass("ff-el-is-error").find(".error").remove()
                            }), w().validate(b, e.rules)
                        },
                        showErrorMessages: h,
                        scrollToFirstError: m,
                        settings: e,
                        formSelector: g,
                        sendData: o,
                        addGlobalValidator: function(a, b) {
                            t[a] = b
                        },
                        config: e,
                        showFormSubmissionProgress: A = function(a) {
                            a.addClass("ff_submitting"), a.find(".ff-btn-submit").addClass("disabled").addClass("ff-working").prop("disabled", !0)
                        },
                        addFieldValidationRule: function(a, b, c) {
                            e.rules[a] || (e.rules[a] = {}), e.rules[a][b] = c
                        },
                        removeFieldValidationRule: function(a, b) {
                            a in e.rules && b in e.rules[a] && delete e.rules[a][b]
                        },
                        hideFormSubmissionProgress: z = function(a) {
                            a.removeClass("ff_submitting"), a.find(".ff-btn-submit").removeClass("disabled").removeClass("ff-working").attr("disabled", !1), c.parent().find(".ff_msg_temp").remove()
                        }
                    }, d[i] = s, s) : (console.log("No Fluent form JS vars found!"), !1)
                }, e = {
                    init: function() {
                        var a = this;
                        setTimeout(function() {
                            a.initMultiSelect()
                        }, 100), this.initMask(), this.initNumericFormat(), this.initCheckableActive()
                    },
                    initMultiSelect: function() {
                        a.isFunction(window.Choices) && a(".ff_has_multi_select").length && a(".ff_has_multi_select").each(function(f, d) {
                            var b = c(c({}, {
                                    removeItemButton: !0,
                                    silent: !0,
                                    shouldSort: !1,
                                    searchEnabled: !0,
                                    searchResultLimit: 50
                                }), window.fluentFormVars.choice_js_vars),
                                e = a(d).attr("data-max_selected_options");
                            parseInt(e) && (b.maxItemCount = parseInt(e), b.maxItemText = function(b) {
                                var a = window.fluentFormVars.choice_js_vars.maxItemText;
                                return a = a.replace("%%maxItemCount%%", b)
                            }), b.callbackOnCreateTemplates = function() {
                                return a(this.passedElement.element), {
                                    option: function(a) {
                                        var b = Choices.defaults.templates.option.call(this, a);
                                        return a.customProperties && (b.dataset.calc_value = a.customProperties), b
                                    }
                                }
                            }, a(d).data("choicesjs", new Choices(d, b))
                        })
                    },
                    initMask: function() {
                        if (null != jQuery.fn.mask) {
                            var a = {
                                clearIfNotMatch: window.fluentFormVars.input_mask_vars.clearIfNotMatch,
                                translation: {
                                    "*": {
                                        pattern: /[0-9a-zA-Z]/
                                    },
                                    0: {
                                        pattern: /\d/
                                    },
                                    9: {
                                        pattern: /\d/,
                                        optional: !0
                                    },
                                    "#": {
                                        pattern: /\d/,
                                        recursive: !0
                                    },
                                    A: {
                                        pattern: /[a-zA-Z0-9]/
                                    },
                                    S: {
                                        pattern: /[a-zA-Z]/
                                    }
                                }
                            };
                            jQuery("input[data-mask]").each(function(e, b) {
                                var d = (b = jQuery(b)).attr("data-mask"),
                                    c = a;
                                b.attr("data-mask-reverse") && (c.reverse = !0), b.attr("data-clear-if-not-match") && (c.clearIfNotMatch = !0), d && b.mask(d, c)
                            })
                        }
                    },
                    initCheckableActive: function() {
                        a(document).on("change", ".ff-el-form-check input[type=radio]", function() {
                            a(this).is(":checked") && (a(this).closest(".ff-el-input--content").find(".ff-el-form-check").removeClass("ff_item_selected"), a(this).closest(".ff-el-form-check").addClass("ff_item_selected"))
                        }), a(document).on("change", ".ff-el-form-check input[type=checkbox]", function() {
                            a(this).is(":checked") ? a(this).closest(".ff-el-form-check").addClass("ff_item_selected") : a(this).closest(".ff-el-form-check").removeClass("ff_item_selected")
                        })
                    },
                    initNumericFormat: function() {
                        var b = a(".frm-fluent-form .ff_numeric");
                        a.each(b, function(e, c) {
                            var b = a(c),
                                d = JSON.parse(b.attr("data-formatter"));
                            b.val() && b.val(window.ff_helper.formatCurrency(b, b.val())), b.on("blur change", function() {
                                var b = currency(a(this).val(), d).format();
                                a(this).val(b)
                            })
                        })
                    }
                }, f = function() {
                    return new function() {
                        this.errors = {}, this.validate = function(g, e) {
                            var c, b, d = this,
                                f = !0;
                            g.each(function(h, g) {
                                c = a(g), b = c.prop("name").replace("[]", ""), "repeater_item" === c.data("type") && (b = c.attr("data-name"), e[b] = e[c.data("error_index")]), e[b] && a.each(e[b], function(a, e) {
                                    a in d && (d[a](c, e) || (f = !1, b in d.errors || (d.errors[b] = {}), d.errors[b][a] = e.message))
                                })
                            }), !f && this.throwValidationException()
                        }, this.throwValidationException = function() {
                            var a = new ffValidationError("Validation Error!");
                            throw a.messages = this.errors, a
                        }, this.required = function(b, e) {
                            var c, d;
                            return !e.value || (c = b.prop("type"), "checkbox" == c || "radio" == c ? b.parents(".ff-el-group").attr("data-name") && !e.per_row ? b.parents(".ff-el-group").find("input:checked").length : a('[name="' + b.prop("name") + '"]:checked').length : c.startsWith("select") ? (d = b.find(":selected"), !(!d.length || !d.val().length)) : "file" == c ? b.closest("div").find(".ff-uploaded-list").find(".ff-upload-preview[data-src]").length : "false" == b.attr("is-changed") ? "" : String(a.trim(b.val())).length)
                        }, this.url = function(b, c) {
                            var a = b.val();
                            return !!(!c.value || !a.length) || /^(ftp|http|https):\/\/[^ "]+$/.test(a)
                        }, this.email = function(b, c) {
                            var a = b.val();
                            return !!(!c.value || !a.length) || /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(a.toLowerCase())
                        }, this.numeric = function(c, d) {
                            var b = window.ff_helper.numericVal(c);
                            return b = b.toString(), !d.value || !b || a.isNumeric(b)
                        }, this.min = function(b, c) {
                            if (!b.val()) return !0;
                            var a = window.ff_helper.numericVal(b);
                            return a = a.toString(), !c.value || !a.length || (this.numeric(b, c) ? Number(a) >= Number(c.value) : void 0)
                        }, this.max = function(b, c) {
                            if (!b.val()) return !0;
                            var a = window.ff_helper.numericVal(b);
                            return a = a.toString(), !c.value || !a.length || (this.numeric(b, c) ? Number(a) <= Number(c.value) : void 0)
                        }, this.digits = function(b, c) {
                            if (!b.val()) return !0;
                            var a = window.ff_helper.numericVal(b);
                            return a = a.toString(), !c.value || !a.length || this.numeric(b, c) && a.length == c.value
                        }, this.max_file_size = function() {
                            return !0
                        }, this.max_file_count = function() {
                            return !0
                        }, this.allowed_file_types = function() {
                            return !0
                        }, this.allowed_image_types = function() {
                            return !0
                        }, this.force_failed = function() {
                            return !1
                        }, this.valid_phone_number = function(a, e) {
                            var b, c, d;
                            if (!a.val()) return !0;
                            if (void 0 === window.intlTelInputGlobals) return !0;
                            if (a && a[0]) return !!(b = window.intlTelInputGlobals.getInstance(a[0]), !b) || (a.hasClass("ff_el_with_extended_validation") ? !!b.isValidNumber() && (a.val(b.getNumber()), !0) : (c = b.getSelectedCountryData(), d = a.val(), !a.attr("data-original_val") && d && c && c.dialCode && (a.val("+" + c.dialCode + d), a.attr("data-original_val", d)), !0))
                        }
                    }
                }, g = a(".frm-fluent-form");

                function h(b) {
                    var a = fluentFormApp(b),
                        d, c;
                    a ? (a.initFormHandlers(), a.initTriggers()) : (d = 0, c = setInterval(function() {
                        (a = fluentFormApp(b)) && (clearInterval(c), a.initFormHandlers(), a.initTriggers()), ++d > 10 && (clearInterval(c), console.log("Form could not be loaded"))
                    }, 1e3))
                }
                a.each(g, function(c, b) {
                    h(a(b))
                }), a(document).on("ff_reinit", function(f, d) {
                    var b = a(d),
                        c = fluentFormApp(b);
                    if (!c) return !1;
                    c.reinitExtras(), h(b), e.init(), b.attr("data-ff_reinit", "yes")
                }), e.init()
            }(window.fluentFormVars, jQuery), jQuery(".fluentform").on("submit", ".ff-form-loading", function(a) {
                a.preventDefault(), jQuery(this).parent().find(".ff_msg_temp").remove(), jQuery("<div/>", {
                    class: "error text-danger ff_msg_temp"
                }).html("Javascript handler could not be loaded. Form submission has been failed. Reload the page and try again").insertAfter(jQuery(this))
            })
    }), jQuery(document.body).on("fluentform_init", function(a, b) {})
})()